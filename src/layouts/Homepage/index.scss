@import '../../../assets/fonts/index.css';
@import './variables';

// n is number of stars required
@function multiple-box-shadow ($n) {
  $value: '#{random($star-dimension)}px #{random($star-dimension)}px #{$star-color}';
  @for $i from 2 through $n {
    $value: '#{$value} , #{random($star-dimension)}px #{random($star-dimension)}px #{$star-color}';
  }

  @return unquote($value);
}

$shadows-small:  multiple-box-shadow(400);
$shadows-medium: multiple-box-shadow(40);
$shadows-big:    multiple-box-shadow(20);

@keyframes animStar {
  from {
    transform: translateY(0px);
  }

  to {
    transform: translateY(-#{$star-dimension}px);
  }
}

.stars {
  width: 100%;
}

.smallStars {
  width: 1px;
  height: 1px;
  background: transparent;
  box-shadow: $shadows-small;
  animation			: animStar #{$star-speed}s linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: #{$star-dimension}px;
    width: 1px;
    height: 1px;
    background: transparent;
    box-shadow: $shadows-small;
  }
}

.mediumStars {
  width: 2px;
  height: 2px;
  background: transparent;
  box-shadow: $shadows-medium;
  animation			: animStar #{2*$star-speed}s linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: #{$star-dimension}px;
    width: 2px;
    height: 2px;
    background: transparent;
    box-shadow: $shadows-medium;
  }
}

.bigStars {
  width: 3px;
  height: 3px;
  background: transparent;
  box-shadow: $shadows-big;
  animation			: animStar #{3*$star-speed}s linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: #{$star-dimension}px;
    width: 3px;
    height: 3px;
    background: transparent;
    box-shadow: $shadows-big;
  }
}

.main {
  position: relative;
}

.background {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: radial-gradient(ellipse at bottom, #1b2735 0%, $background-color 100%);
  overflow: hidden;
}

.navBackground {
  z-index: 1;

  transition: background 0.3s;

  &.stickyNavBackground {
    background: $background-color;
  }
}

.nav {
  @extend %centered;
  padding-top: 1rem;
  font-family: 'Lato', sans-serif;
  justify-content: space-between;
  text-align: center;

  a,
  a:link,
  a:visited {
    color: rgb(170, 200, 255);
    display: inline-block;
    text-decoration: none;
    transition: color 0.3s;
    font-weight: 400;
    font-size: 1.1rem;
    text-transform: uppercase;
    vertical-align: middle;
    width: 20%;

    // Not using classes for styling -> Specifity wars.
    &.homeLink {
      font-family: 'HFF-Jammed-Pack', sans-serif;
      font-size: $home-size;
      letter-spacing: calc(#{$home-size} / 10);
      height: $home-size;
      line-height: calc(#{$home-size} - 1rem);
      padding-top: 1rem;
      opacity: 1;
      color: white;
      // subtle glow
      text-shadow: 0 0 2px white;
    }

    &:hover,
    &.homeLink {
      color: white;
      opacity: 1;
    }
  }


}

.content {
  position: relative;
}

.homepage {
  position: absolute;
  padding: 1rem;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  text-align: center;
}

.homepageSegments {
  overflow-y: auto;
  -webkit-mask-image: linear-gradient(to bottom, transparent, rgba(0,0,0,1) $home-size/2);
  max-height: calc(100vh - #{$home-size});

  > * {
    @extend %centered;
    min-height: calc(100vh - #{$home-size});

  }
}

footer {
  transition: opacity 0.3s 0.1s;
  opacity: 1;
}

.contact svg {
  transform: scale(0.4);
}

.hidden {
  opacity: 0;
}
